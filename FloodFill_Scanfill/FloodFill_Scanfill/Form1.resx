<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>